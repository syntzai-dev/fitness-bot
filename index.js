const express = require('express');
const bodyParser = require('body-parser');
const axios = require('axios');

const app = express();
app.use(bodyParser.json());

// –¢–≤–æ–π TOKEN –æ—Ç @BotFather (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π!)
const BOT_TOKEN = '7734643977:AAEOCHvQdzI_dW7MCyolUrB_lLri3t6HZgE';
const API_URL = `https://api.telegram.org/bot${BOT_TOKEN}`;

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage(chatId, text, options = {}) {
  try {
    await axios.post(`${API_URL}/sendMessage`, {
      chat_id: chatId,
      text: text,
      parse_mode: 'HTML',
      ...options
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error.response?.data || error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
async function sendMessageWithButtons(chatId, text, buttons) {
  const keyboard = {
    inline_keyboard: buttons.map(row => 
      row.map(btn => ({
        text: btn.text,
        callback_data: btn.callback || btn.text
      }))
    )
  };
  
  await sendMessage(chatId, text, { reply_markup: keyboard });
}

// –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∫–∞–ª–æ—Ä–∏–π
function calculateCalories(weight, height, age, gender, activity) {
  let bmr;
  
  if (gender === 'male') {
    bmr = 88.362 + (13.397 * weight) + (4.799 * height) - (5.677 * age);
  } else {
    bmr = 447.593 + (9.247 * weight) + (3.098 * height) - (4.330 * age);
  }
  
  const activityMultipliers = {
    'sedentary': 1.2,
    'light': 1.375,
    'moderate': 1.55,
    'active': 1.725,
    'very_active': 1.9
  };
  
  const dailyCalories = Math.round(bmr * activityMultipliers[activity]);
  return { bmr: Math.round(bmr), daily: dailyCalories };
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
function handleCommand(message) {
  const chatId = message.chat.id;
  const text = message.text;
  const firstName = message.from.first_name || '–î—Ä—É–≥';

  switch (text) {
    case '/start':
      const welcomeText = `üèãÔ∏è –ü—Ä–∏–≤–µ—Ç, ${firstName}! –Ø FitnessHelper Bot!

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ:
üí™ –°—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏
üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏  
üéØ –î–æ—Å—Ç–∏–≥–∞—Ç—å —Ñ–∏—Ç–Ω–µ—Å-—Ü–µ–ª–µ–π

–ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥`;
      
      sendMessage(chatId, welcomeText);
      break;

    case '/help':
      const helpButtons = [
        [{ text: 'üí™ –ö–∞–ª–æ—Ä–∏–∏', callback: 'calories' }],
        [{ text: 'üìä –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', callback: 'workout' }],
        [{ text: 'üéØ –ü—Ä–æ–≥—Ä–µ—Å—Å', callback: 'progress' }],
        [{ text: 'üíé Premium', callback: 'premium' }]
      ];
      
      sendMessageWithButtons(chatId, 
        `üèãÔ∏è <b>–ö–û–ú–ê–ù–î–´ –§–ò–¢–ù–ï–°-–ë–û–¢–ê:</b>

üí™ /calories - –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∫–∞–ª–æ—Ä–∏–π
üìä /workout - –∑–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É  
üéØ /progress - –º–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å
üíé /premium - –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
‚ÑπÔ∏è /help - —ç—Ç–æ –º–µ–Ω—é

–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –∏ –Ω–∞—á–Ω—ë–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è! üí™`, helpButtons);
      break;

    case '/calories':
      const calorieButtons = [
        [{ text: 'üî¢ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É', callback: 'calc_calories' }],
        [{ text: 'üçé –ó–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∏—ë–º –ø–∏—â–∏', callback: 'log_food' }],
        [{ text: 'üìã –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è', callback: 'food_diary' }]
      ];
      
      sendMessageWithButtons(chatId,
        `üçé <b>–ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –ö–ê–õ–û–†–ò–ô</b>

–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?`, calorieButtons);
      break;

    case '/workout':
      const workoutButtons = [
        [{ text: 'üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ', callback: 'cardio' }, { text: 'üèãÔ∏è‚Äç‚ôÄÔ∏è –°–∏–ª–æ–≤–∞—è', callback: 'strength' }],
        [{ text: 'üßò‚Äç‚ôÄÔ∏è –ô–æ–≥–∞/–†–∞—Å—Ç—è–∂–∫–∞', callback: 'yoga' }],
        [{ text: 'üìä –ú–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', callback: 'my_workouts' }]
      ];
      
      sendMessageWithButtons(chatId,
        `üí™ <b>–ó–ê–ü–ò–°–¨ –¢–†–ï–ù–ò–†–û–í–ö–ò</b>

–ö–∞–∫–æ–π —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏?`, workoutButtons);
      break;

    case '/progress':
      sendMessage(chatId, 
        `üìä <b>–¢–í–û–ô –ü–†–û–ì–†–ï–°–°</b>

üî• –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∑–∞ –Ω–µ–¥–µ–ª—é: 0
üí™ –°–∏–ª–æ–≤—ã—Ö: 0 | üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ: 0
üìà –°—Ä–µ–¥–Ω–∏–µ –∫–∞–ª–æ—Ä–∏–∏: 0

üéØ <b>–¶–ï–õ–ò:</b>
- –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: 0/3 –≤ –Ω–µ–¥–µ–ª—é
- –ö–∞–ª–æ—Ä–∏–∏: 0/2000 –≤ –¥–µ–Ω—å

üí° <i>–î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–∫–∏–Ω–≥–∞ –ø–æ–¥–∫–ª—é—á–∏ Premium!</i>`);
      break;

    case '/premium':
      const premiumButtons = [
        [{ text: 'üíé –ö—É–ø–∏—Ç—å Premium - $3/–º–µ—Å', callback: 'buy_premium' }],
        [{ text: '‚ÑπÔ∏è –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç?', callback: 'premium_info' }]
      ];
      
      sendMessageWithButtons(chatId,
        `üíé <b>PREMIUM –í–û–ó–ú–û–ñ–ù–û–°–¢–ò</b>

üéØ <b>–ß—Ç–æ –ø–æ–ª—É—á–∏—à—å:</b>
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è
‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ PDF
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

üí∞ <b>–¶–µ–Ω–∞:</b> $3/–º–µ—Å—è—Ü

üéÅ <b>–ü–µ—Ä–≤—ã–µ 7 –¥–Ω–µ–π –ë–ï–°–ü–õ–ê–¢–ù–û!</b>`, premiumButtons);
      break;

    default:
      sendMessage(chatId, 
        `ü§î –ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É "${text}"

–ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥!`);
      break;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫
function handleCallback(callbackQuery) {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;
  const firstName = callbackQuery.from.first_name || '–î—Ä—É–≥';

  switch (data) {
    case 'calories':
      handleCommand({ chat: { id: chatId }, text: '/calories', from: { first_name: firstName } });
      break;

    case 'workout':
      handleCommand({ chat: { id: chatId }, text: '/workout', from: { first_name: firstName } });
      break;

    case 'progress':
      handleCommand({ chat: { id: chatId }, text: '/progress', from: { first_name: firstName } });
      break;

    case 'premium':
      handleCommand({ chat: { id: chatId }, text: '/premium', from: { first_name: firstName } });
      break;

    case 'calc_calories':
      sendMessage(chatId, 
        `üî¢ <b>–ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –ö–ê–õ–û–†–ò–ô</b>

–î–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Ç–≤–æ–µ–π –Ω–æ—Ä–º—ã –∫–∞–ª–æ—Ä–∏–π –º–Ω–µ –Ω—É–∂–Ω—ã –¥–∞–Ω–Ω—ã–µ:

üìù <b>–û—Ç–ø—Ä–∞–≤—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b>
<code>–í–µ—Å –†–æ—Å—Ç –í–æ–∑—Ä–∞—Å—Ç –ü–æ–ª –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</code>

üìã <b>–ü—Ä–∏–º–µ—Ä:</b>
<code>70 175 25 –º —É–º–µ—Ä–µ–Ω–Ω–∞—è</code>

üî∏ <b>–ü–æ–ª:</b> –º/–∂
üî∏ <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> –Ω–∏–∑–∫–∞—è, –ª—ë–≥–∫–∞—è, —É–º–µ—Ä–µ–Ω–Ω–∞—è, –≤—ã—Å–æ–∫–∞—è, –æ—á–µ–Ω—å_–≤—ã—Å–æ–∫–∞—è`);
      break;

    case 'log_food':
      sendMessage(chatId,
        `üçé <b>–ó–ê–ü–ò–°–¨ –ü–†–ò–Å–ú–ê –ü–ò–©–ò</b>

üìù <b>–û—Ç–ø—Ä–∞–≤—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b>
<code>–ü—Ä–æ–¥—É–∫—Ç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</code>

üìã <b>–ü—Ä–∏–º–µ—Ä—ã:</b>
<code>–û–≤—Å—è–Ω–∫–∞ 100–≥</code>
<code>–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ 150–≥</code>
<code>–Ø–±–ª–æ–∫–æ 1—à—Ç</code>

üí° <i>–í Premium –≤–µ—Ä—Å–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –±–∞–∑–∞ –∏–∑ 10,000+ –ø—Ä–æ–¥—É–∫—Ç–æ–≤!</i>`);
      break;

    case 'cardio':
      sendMessage(chatId,
        `üèÉ‚Äç‚ôÇÔ∏è <b>–ö–ê–†–î–ò–û –¢–†–ï–ù–ò–†–û–í–ö–ê</b>

üìù <b>–û—Ç–ø—Ä–∞–≤—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b>
<code>–¢–∏–ø –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å</code>

üìã <b>–ü—Ä–∏–º–µ—Ä—ã:</b>
<code>–ë–µ–≥ 30–º–∏–Ω —Å—Ä–µ–¥–Ω—è—è</code>
<code>–í–µ–ª–æ—Å–∏–ø–µ–¥ 45–º–∏–Ω –≤—ã—Å–æ–∫–∞—è</code>
<code>–•–æ–¥—å–±–∞ 60–º–∏–Ω –Ω–∏–∑–∫–∞—è</code>

‚úÖ <i>–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ —Ç–≤–æ–π –¥–Ω–µ–≤–Ω–∏–∫!</i>`);
      break;

    case 'strength':
      sendMessage(chatId,
        `üèãÔ∏è‚Äç‚ôÄÔ∏è <b>–°–ò–õ–û–í–ê–Ø –¢–†–ï–ù–ò–†–û–í–ö–ê</b>

üìù <b>–û—Ç–ø—Ä–∞–≤—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b>
<code>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ü–æ–¥—Ö–æ–¥—ã√ó–ü–æ–≤—Ç–æ—Ä—ã –í–µ—Å</code>

üìã <b>–ü—Ä–∏–º–µ—Ä—ã:</b>
<code>–ñ–∏–º –ª—ë–∂–∞ 3√ó8 80–∫–≥</code>
<code>–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è 4√ó12 —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π_–≤–µ—Å</code>
<code>–¢—è–≥–∞ –≤–µ—Ä—Ö–Ω–µ–≥–æ –±–ª–æ–∫–∞ 3√ó10 60–∫–≥</code>

‚úÖ <i>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ç–≤–æ—ë–º –ø—Ä–æ–≥—Ä–µ—Å—Å–µ!</i>`);
      break;

    case 'buy_premium':
      sendMessage(chatId,
        `üíé <b>–ü–û–ö–£–ü–ö–ê PREMIUM</b>

üéÅ <b>7 –¥–Ω–µ–π –ë–ï–°–ü–õ–ê–¢–ù–û!</b>
–ó–∞—Ç–µ–º $3/–º–µ—Å—è—Ü

üí≥ <b>–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</b>
‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
‚Ä¢ PayPal  
‚Ä¢ Apple Pay / Google Pay
‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞

üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @support_bot

‚ö° <i>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è!</i>
üîí <i>–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ —á–µ—Ä–µ–∑ Stripe</i>

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—à–∏: <code>–ö–£–ü–ò–¢–¨ PREMIUM</code>`);
      break;

    case 'premium_info':
      sendMessage(chatId,
        `üíé <b>PREMIUM –ü–û–î–†–û–ë–ù–û</b>

üçé <b>–ü–∏—Ç–∞–Ω–∏–µ:</b>
‚Ä¢ –ë–∞–∑–∞ 10,000+ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –ö–ë–ñ–£
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è
‚Ä¢ –†–µ—Ü–µ–ø—Ç—ã –∏ –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢—Ä–µ–∫–∏–Ω–≥ –≤–æ–¥—ã –∏ –≤–∏—Ç–∞–º–∏–Ω–æ–≤

üí™ <b>–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:</b>
‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º—ã –æ—Ç –ø—Ä–æ—Ñ–∏-—Ç—Ä–µ–Ω–µ—Ä–æ–≤
‚Ä¢ –í–∏–¥–µ–æ-—É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è HD –∫–∞—á–µ—Å—Ç–≤–∞
‚Ä¢ –ü–ª–∞–Ω—ã –¥–ª—è –¥–æ–º–∞ –∏ –∑–∞–ª–∞
‚Ä¢ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å

üìä <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞:</b>
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–æ–≤ –≤ PDF

üéØ <b>–ú–æ—Ç–∏–≤–∞—Ü–∏—è:</b>
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ –Ω–∞–≥—Ä–∞–¥
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞

üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> $3/–º–µ—Å—è—Ü
üéÅ <b>–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥:</b> 7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ`);
      break;

    default:
      sendMessage(chatId, 'ü§î –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!');
      break;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –∏–∑ —Ç–µ–∫—Å—Ç–∞
function handleCalorieCalculation(message) {
  const text = message.text;
  const parts = text.split(' ');
  
  if (parts.length === 5) {
    const [weight, height, age, gender, activity] = parts;
    const weightNum = parseFloat(weight);
    const heightNum = parseFloat(height);
    const ageNum = parseInt(age);
    const genderEn = gender.toLowerCase() === '–º' ? 'male' : 'female';
    
    const activityMap = {
      '–Ω–∏–∑–∫–∞—è': 'sedentary',
      '–ª—ë–≥–∫–∞—è': 'light', 
      '—É–º–µ—Ä–µ–Ω–Ω–∞—è': 'moderate',
      '–≤—ã—Å–æ–∫–∞—è': 'active',
      '–æ—á–µ–Ω—å_–≤—ã—Å–æ–∫–∞—è': 'very_active'
    };
    
    const activityEn = activityMap[activity.toLowerCase()];
    
    if (weightNum && heightNum && ageNum && activityEn) {
      const calories = calculateCalories(weightNum, heightNum, ageNum, genderEn, activityEn);
      
      const resultText = `üî• <b>–¢–í–û–Ø –ù–û–†–ú–ê –ö–ê–õ–û–†–ò–ô</b>

üë§ <b>–î–∞–Ω–Ω—ã–µ:</b>
–í–µ—Å: ${weightNum}–∫–≥ | –†–æ—Å—Ç: ${heightNum}—Å–º | –í–æ–∑—Ä–∞—Å—Ç: ${ageNum}–ª–µ—Ç
–ü–æ–ª: ${gender.toUpperCase()} | –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${activity}

üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</b>
üî∏ –ë–∞–∑–æ–≤—ã–π –º–µ—Ç–∞–±–æ–ª–∏–∑–º: <b>${calories.bmr} –∫–∫–∞–ª/–¥–µ–Ω—å</b>
üî∏ –° —É—á—ë—Ç–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: <b>${calories.daily} –∫–∫–∞–ª/–¥–µ–Ω—å</b>

üéØ <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>
‚Ä¢ –î–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è: ${calories.daily - 300}-${calories.daily - 500} –∫–∫–∞–ª
‚Ä¢ –î–ª—è –Ω–∞–±–æ—Ä–∞ –º–∞—Å—Å—ã: ${calories.daily + 300}-${calories.daily + 500} –∫–∫–∞–ª
‚Ä¢ –î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è: ${calories.daily} –∫–∫–∞–ª

üí° <i>–í Premium –¥–æ—Å—Ç—É–ø–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è!</i>`;

      sendMessage(message.chat.id, resultText);
      return true;
    }
  }
  return false;
}

// –ì–ª–∞–≤–Ω—ã–π webhook endpoint
app.post('/webhook', (req, res) => {
  const update = req.body;
  
  try {
    if (update.message) {
      const message = update.message;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Ä–∞—Å—á—ë—Ç–æ–º –∫–∞–ª–æ—Ä–∏–π
      if (message.text && !message.text.startsWith('/')) {
        const isCalorieCalc = handleCalorieCalculation(message);
        if (!isCalorieCalc) {
          // –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å—á—ë—Ç –∫–∞–ª–æ—Ä–∏–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ help
          sendMessage(message.chat.id, 
            `ü§î –ù–µ –ø–æ–Ω—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ "${message.text}"
            
–ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥!`);
        }
      } else if (message.text) {
        handleCommand(message);
      }
    } else if (update.callback_query) {
      handleCallback(update.callback_query);
    }
    
    res.status(200).send('OK');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error);
    res.status(500).send('Error');
  }
});

// Endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
app.get('/', (req, res) => {
  res.send('ü§ñ FitnessHelper Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!');
});

// Endpoint –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook
app.get('/setWebhook', async (req, res) => {
  try {
    const webhookUrl = `${req.protocol}://${req.get('host')}/webhook`;
    const response = await axios.post(`${API_URL}/setWebhook`, {
      url: webhookUrl
    });
    res.json({ success: true, data: response.data });
  } catch (error) {
    res.json({ success: false, error: error.message });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

module.exports = app;